version: 2.1

executors:
  terraform:
    docker:
      - image: gcr.io/fs-ops/tfchecker
  node:
    docker:
      - image: cimg/node:current

  python:
    docker:
      - image: cimg/python:current
orbs:
  gh: circleci/github-cli@2.0

  

jobs:
  terraform_check:
    executor: terraform
    steps:
      - checkout
      - setup_remote_docker:
        docker_layer_caching: true
      - run_shell:
          step_name: Run Terraform Validate
          command: |
            terraform init -backend=false
            terraform validate
      # - run_shell:
      #     step_name: Generate Terraform Docs
      #   .... <check terraform docs generation> ....

  msg_check:
    executor: python
    steps:
      - checkout
      - gh/install
      - run_shell:
        command: |
          if [ -z "${CIRCLE_PULL_REQUEST}" ]; then
            MSG=`git log -n 1 --pretty=%s`
          else
            MSG=`gh pr view ${CIRCLE_PULL_REQUEST##*/} | head -n 1` 
          fi
          hooks/commit-msg.py $MSG

  release:
    executor: node
    steps:
        - checkout
        - run_shell:
          step_name: Semantic Release
          command: npx semantic-release


workflows:
  pr_test:
    jobs:
      - terraform_check
      - msg_check
  backend-test:
    when: 
      condition:
        equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - release

  # create-a-deployment: #move this into the first step
  #   docker:
  #     - image: cimg/base:stable
  #   steps:
      
  #     - run:
  #         command: >
  #           gh api /repos/:owner/:repo/deployments --preview ant-man --input - \

  #           --jq '"export GH_DEPLOYMENT_STATUS_URL=\(.statuses_url)"' >>
  #           $BASH_ENV \<<JSON || true

  #           {

  #           "ref": "${CIRCLE_TAG:-$CIRCLE_SHA1}",

  #           "environment": "${AWS_ENVIRONMENT,,}",

  #           "auto_merge": false,

  #           "required_contexts": []

  #           }

  
